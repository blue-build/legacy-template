# image will be published to ghcr.io/<user>/<name>
name: atomic-tiles
# description will be included in the image's metadata
description: i3wm/sway image

# the base image to build on top of (FROM) and the version tag to use
base-image: ghcr.io/ublue-os/sericea-nvidia
image-version: latest # latest is also supported if you want new updates ASAP

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  - type: files
    files:
      - usr: /usr
          # copy static configurations
          #
          # copies config/files/usr into your image's /usr
          #
          # configuration you wish to end up in /etc/ on the booted system
          # should be added into /usr/etc/ as that is the proper "distro"
          # config directory on ostree. Read more in the files module's README

  - type: rpm-ostree
    repos: # - https://copr.fedorainfracloud.org/coprs/atim/starship/repo/fedora-%OS_VERSION%/atim-starship-fedora-%OS_VERSION%.repo
    install:
        - alacritty # Consider other terminal?
        - fcitx5 
        - fcitx5-autostart 
        - fcitx5-gtk
        - fcitx5-lua 
        - fcitx5-mozc # Japanese IME Module
        - fcitx5-qt
        - fcitx5-qt-module
        - feh
        - fontawesome-fonts
        - terminus-fonts
        - gnome-settings-daemon # Perhaps there's a lighter xsettings daemon?
        - i3 
        - i3blocks
        - i3lock
        - maim 
        # - mpd 
        - neovim # Remove in favor of appimage?
        - pamixer 
        - pcmanfm # GUI File manager, maybe replace with something else.
        - picom 
        - qemu-system-arm 
        - qt5ct # For QT Dark theme, can I get this working?
        - redshift-gtk
        - unclutter
        - virt-install 
        - virt-manager
        - virt-viewer 
        - xclip 
        - xdotool
        - xset
        - zsh
        # Remote File Access
        - rclone
        - fuse-sshfs
        - lftp
        # - Perhaps a SMB client as well?
      # - micro
      # - starship
    remove:
      - firefox # default firefox removed in favor of flatpak
      - firefox-langpacks # langpacks needs to also be removed to prevent dependency problems
      # We use fcitx input rather than ibus
      - ibus
      - ibus-setup
      - ibus-libs
      - ibus-typing-booster
      - ibus-gtk3
      - ibus-gtk4
      - ibus-anthy-python
      - ibus-anthy
      - ibus-hangul
      - ibus-libzhuyin
      - ibus-libpinyin
      - ibus-m17n
      
  - type: bling # configure what to pull in from ublue-os/bling
    install:
      - justfiles
        # add "!include /usr/share/ublue-os/just/100-bling.just"
        # in your custom.just (added by default) or local justfile
      - nix-installer # shell shortcuts for determinate system's nix installers
      # - ublue-os-wallpapers
      # - ublue-update # https://github.com/ublue-os/ublue-update
      # - 1password # install 1Password (stable) and `op` CLI tool
      # - dconf-update-service # a service unit that updates the dconf db on boot
      # - devpod # https://devpod.sh/ as an rpm
      # - gnome-vrr # enables gnome-vrr for your image
      # - container-tools # installs container-related tools onto /usr/bin: kind, kubectx, docker-compose and kubens
      # - laptop # installs TLP and configures your system for laptop usage
      # - flatpaksync # allows synchronization of user-installed flatpaks, see separate documentation section
  - type: fonts
    fonts:
      nerd-fonts:
        - Hack
        - JetBrainsMono

  #- type: yafti
      # if included, yafti and it's dependencies (pip & libadwaita)
      #  will be installed and set up
  #  custom-flatpaks:
      # this section is optional
      # - Celluloid: io.github.celluloid_player.Celluloid
      # - Krita: org.kde.krita

  - type: script
    scripts:
      # this sets up the proper policy & signing files for signed images to work
      - signing.sh
